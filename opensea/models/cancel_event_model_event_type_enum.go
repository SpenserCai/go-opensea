// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CancelEventModelEventTypeEnum cancel event model event type enum
//
// swagger:model CancelEventModelEventTypeEnum
type CancelEventModelEventTypeEnum string

func NewCancelEventModelEventTypeEnum(value CancelEventModelEventTypeEnum) *CancelEventModelEventTypeEnum {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CancelEventModelEventTypeEnum.
func (m CancelEventModelEventTypeEnum) Pointer() *CancelEventModelEventTypeEnum {
	return &m
}

const (

	// CancelEventModelEventTypeEnumCancel captures enum value "cancel"
	CancelEventModelEventTypeEnumCancel CancelEventModelEventTypeEnum = "cancel"
)

// for schema
var cancelEventModelEventTypeEnumEnum []interface{}

func init() {
	var res []CancelEventModelEventTypeEnum
	if err := json.Unmarshal([]byte(`["cancel"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cancelEventModelEventTypeEnumEnum = append(cancelEventModelEventTypeEnumEnum, v)
	}
}

func (m CancelEventModelEventTypeEnum) validateCancelEventModelEventTypeEnumEnum(path, location string, value CancelEventModelEventTypeEnum) error {
	if err := validate.EnumCase(path, location, value, cancelEventModelEventTypeEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cancel event model event type enum
func (m CancelEventModelEventTypeEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCancelEventModelEventTypeEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cancel event model event type enum based on context it is used
func (m CancelEventModelEventTypeEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
