// Code generated by go-swagger; DO NOT EDIT.

package transaction_endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrderParams creates a new GetOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrderParams() *GetOrderParams {
	return &GetOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrderParamsWithTimeout creates a new GetOrderParams object
// with the ability to set a timeout on a request.
func NewGetOrderParamsWithTimeout(timeout time.Duration) *GetOrderParams {
	return &GetOrderParams{
		timeout: timeout,
	}
}

// NewGetOrderParamsWithContext creates a new GetOrderParams object
// with the ability to set a context for a request.
func NewGetOrderParamsWithContext(ctx context.Context) *GetOrderParams {
	return &GetOrderParams{
		Context: ctx,
	}
}

// NewGetOrderParamsWithHTTPClient creates a new GetOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrderParamsWithHTTPClient(client *http.Client) *GetOrderParams {
	return &GetOrderParams{
		HTTPClient: client,
	}
}

/*
GetOrderParams contains all the parameters to send to the API endpoint

	for the get order operation.

	Typically these are written to a http.Request.
*/
type GetOrderParams struct {

	/* Chain.

	   The blockchain on which to filter the results.
	*/
	Chain string

	/* OrderHash.

	   The hash of the order to retrieve.
	*/
	OrderHash string

	/* ProtocolAddress.

	   The contract address of the protocol to use in the request.
	*/
	ProtocolAddress string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderParams) WithDefaults() *GetOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get order params
func (o *GetOrderParams) WithTimeout(timeout time.Duration) *GetOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get order params
func (o *GetOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get order params
func (o *GetOrderParams) WithContext(ctx context.Context) *GetOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get order params
func (o *GetOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get order params
func (o *GetOrderParams) WithHTTPClient(client *http.Client) *GetOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get order params
func (o *GetOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChain adds the chain to the get order params
func (o *GetOrderParams) WithChain(chain string) *GetOrderParams {
	o.SetChain(chain)
	return o
}

// SetChain adds the chain to the get order params
func (o *GetOrderParams) SetChain(chain string) {
	o.Chain = chain
}

// WithOrderHash adds the orderHash to the get order params
func (o *GetOrderParams) WithOrderHash(orderHash string) *GetOrderParams {
	o.SetOrderHash(orderHash)
	return o
}

// SetOrderHash adds the orderHash to the get order params
func (o *GetOrderParams) SetOrderHash(orderHash string) {
	o.OrderHash = orderHash
}

// WithProtocolAddress adds the protocolAddress to the get order params
func (o *GetOrderParams) WithProtocolAddress(protocolAddress string) *GetOrderParams {
	o.SetProtocolAddress(protocolAddress)
	return o
}

// SetProtocolAddress adds the protocolAddress to the get order params
func (o *GetOrderParams) SetProtocolAddress(protocolAddress string) {
	o.ProtocolAddress = protocolAddress
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param chain
	if err := r.SetPathParam("chain", o.Chain); err != nil {
		return err
	}

	// path param order_hash
	if err := r.SetPathParam("order_hash", o.OrderHash); err != nil {
		return err
	}

	// path param protocol_address
	if err := r.SetPathParam("protocol_address", o.ProtocolAddress); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
